{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/saisr/OneDrive/Desktop/Personal_Project_6/Vision-AI/frontend/chatbot-ui/src/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\r\nimport { twMerge } from \"tailwind-merge\"\r\n\r\nexport function cn(...inputs: ClassValue[]) {\r\n  return twMerge(clsx(inputs))\r\n}\r\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,8JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,wIAAA,CAAA,OAAI,AAAD,EAAE;AACtB"}},
    {"offset": {"line": 20, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 26, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/saisr/OneDrive/Desktop/Personal_Project_6/Vision-AI/frontend/chatbot-ui/src/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\r\n  ({ className, type, ...props }, ref) => {\r\n    return (\r\n      <input\r\n        type={type}\r\n        className={cn(\r\n          \"flex h-9 w-full rounded-md border border-input bg-transparent px-3 py-1 text-base shadow-sm transition-colors file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\r\n          className\r\n        )}\r\n        ref={ref}\r\n        {...props}\r\n      />\r\n    )\r\n  }\r\n)\r\nInput.displayName = \"Input\"\r\n\r\nexport { Input }\r\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,8JAAM,UAAU,MAC5B,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAO,EAAE;IAC9B,qBACE,6LAAC;QACC,MAAM;QACN,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,2WACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AAEF,MAAM,WAAW,GAAG"}},
    {"offset": {"line": 56, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 62, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/saisr/OneDrive/Desktop/Personal_Project_6/Vision-AI/frontend/chatbot-ui/src/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\r\nimport { Slot } from \"@radix-ui/react-slot\"\r\nimport { cva, type VariantProps } from \"class-variance-authority\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst buttonVariants = cva(\r\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\r\n  {\r\n    variants: {\r\n      variant: {\r\n        default:\r\n          \"bg-primary text-primary-foreground shadow hover:bg-primary/90\",\r\n        destructive:\r\n          \"bg-destructive text-destructive-foreground shadow-sm hover:bg-destructive/90\",\r\n        outline:\r\n          \"border border-input bg-background shadow-sm hover:bg-accent hover:text-accent-foreground\",\r\n        secondary:\r\n          \"bg-secondary text-secondary-foreground shadow-sm hover:bg-secondary/80\",\r\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\r\n        link: \"text-primary underline-offset-4 hover:underline\",\r\n      },\r\n      size: {\r\n        default: \"h-9 px-4 py-2\",\r\n        sm: \"h-8 rounded-md px-3 text-xs\",\r\n        lg: \"h-10 rounded-md px-8\",\r\n        icon: \"h-9 w-9\",\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      variant: \"default\",\r\n      size: \"default\",\r\n    },\r\n  }\r\n)\r\n\r\nexport interface ButtonProps\r\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\r\n    VariantProps<typeof buttonVariants> {\r\n  asChild?: boolean\r\n}\r\n\r\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\r\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\r\n    const Comp = asChild ? Slot : \"button\"\r\n    return (\r\n      <Comp\r\n        className={cn(buttonVariants({ variant, size, className }))}\r\n        ref={ref}\r\n        {...props}\r\n      />\r\n    )\r\n  }\r\n)\r\nButton.displayName = \"Button\"\r\n\r\nexport { Button, buttonVariants }\r\n"],"names":[],"mappings":";;;;;AAAA;AAEA;AAEA;AAHA;;;;;;AAKA,MAAM,iBAAiB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACvB,ySACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,aACE;YACF,SACE;YACF,WACE;YACF,OAAO;YACP,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AASF,MAAM,uBAAS,8JAAM,UAAU,MAC7B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,KAAK,EAAE,GAAG,OAAO,EAAE;IACxD,MAAM,OAAO,UAAU,mKAAA,CAAA,OAAI,GAAG;IAC9B,qBACE,6LAAC;QACC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACxD,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AAEF,OAAO,WAAW,GAAG"}},
    {"offset": {"line": 123, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 129, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/saisr/OneDrive/Desktop/Personal_Project_6/Vision-AI/frontend/chatbot-ui/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst Card = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\r\n      \"rounded-xl border bg-card text-card-foreground shadow\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nCard.displayName = \"Card\"\r\n\r\nconst CardHeader = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\r\n    {...props}\r\n  />\r\n))\r\nCardHeader.displayName = \"CardHeader\"\r\n\r\nconst CardTitle = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\"font-semibold leading-none tracking-tight\", className)}\r\n    {...props}\r\n  />\r\n))\r\nCardTitle.displayName = \"CardTitle\"\r\n\r\nconst CardDescription = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\"text-sm text-muted-foreground\", className)}\r\n    {...props}\r\n  />\r\n))\r\nCardDescription.displayName = \"CardDescription\"\r\n\r\nconst CardContent = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\r\n))\r\nCardContent.displayName = \"CardContent\"\r\n\r\nconst CardFooter = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\"flex items-center p-6 pt-0\", className)}\r\n    {...props}\r\n  />\r\n))\r\nCardFooter.displayName = \"CardFooter\"\r\n\r\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\r\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,8JAAM,UAAU,MAG3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,yDACA;QAED,GAAG,KAAK;;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,8JAAM,UAAU,OAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,8JAAM,UAAU,OAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,6CAA6C;QAC1D,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,8JAAM,UAAU,OAGtC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,8JAAM,UAAU,OAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,8JAAM,UAAU,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG"}},
    {"offset": {"line": 226, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 232, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/saisr/OneDrive/Desktop/Personal_Project_6/Vision-AI/frontend/chatbot-ui/src/app/page.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { useState, useEffect, useRef } from \"react\";\r\nimport { Input } from \"@/components/ui/input\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Card, CardContent } from \"@/components/ui/card\";\r\nimport { motion } from \"framer-motion\";\r\nimport { \r\n  Copy, Trash2, Moon, Sun, Mic, Send, \r\n  Paperclip, Download, Search, Smile, Clock,\r\n  Check, CheckCheck, UserCircle, BotIcon,\r\n  Code, Link, ImageIcon, FileText, Upload,\r\n  Trash, FileUp, BookOpen, Database, AlertCircle\r\n} from \"lucide-react\";\r\n\r\ntype ContentType = \"text\" | \"code\" | \"link\" | \"image\" | \"markdown\" | \"json\";\r\n\r\ntype Message = {\r\n  id: string;\r\n  role: \"user\" | \"bot\";\r\n  content: string;\r\n  contentType?: ContentType;\r\n  timestamp: Date;\r\n  status: \"sending\" | \"sent\" | \"delivered\" | \"read\";\r\n  reactions?: string[];\r\n  attachments?: Array<{\r\n    type: string;\r\n    url: string;\r\n    name: string;\r\n    docId?: string; // Add document ID for uploaded RAG documents\r\n  }>;\r\n};\r\n\r\ntype Document = {\r\n  id: string;\r\n  filename: string;\r\n  upload_date: string;\r\n  doc_type: string;\r\n};\r\n\r\nexport default function Chatbot() {\r\n  const [messages, setMessages] = useState<Message[]>([]);\r\n  const [input, setInput] = useState(\"\");\r\n  const [darkMode, setDarkMode] = useState(false);\r\n  const [isRecording, setIsRecording] = useState(false);\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const [isSearching, setIsSearching] = useState(false);\r\n  const [botIsTyping, setBotIsTyping] = useState(false);\r\n  const [selectedFiles, setSelectedFiles] = useState<File[]>([]);\r\n  const [documents, setDocuments] = useState<Document[]>([]);\r\n  const [showDocuments, setShowDocuments] = useState(false);\r\n  const [isUploadingDoc, setIsUploadingDoc] = useState(false);\r\n  const [uploadError, setUploadError] = useState(\"\");\r\n  \r\n  const messagesEndRef = useRef<HTMLDivElement>(null);\r\n  const fileInputRef = useRef<HTMLInputElement>(null);\r\n  const docInputRef = useRef<HTMLInputElement>(null);\r\n  const mediaRecorderRef = useRef<MediaRecorder | null>(null);\r\n  const audioChunksRef = useRef<Blob[]>([]);\r\n  \r\n  const API_URL = \"http://localhost:8000\";\r\n  \r\n  useEffect(() => {\r\n    const isDark = window.matchMedia(\"(prefers-color-scheme: dark)\").matches;\r\n    setDarkMode(isDark);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    document.documentElement.classList.toggle(\"dark\", darkMode);\r\n  }, [darkMode]);\r\n  \r\n  useEffect(() => {\r\n    const savedMessages = localStorage.getItem(\"chatMessages\");\r\n    if (savedMessages) {\r\n      try {\r\n        const parsedMessages = JSON.parse(savedMessages);\r\n        const messagesWithDateObjects = parsedMessages.map((msg: any) => ({\r\n          ...msg,\r\n          timestamp: new Date(msg.timestamp)\r\n        }));\r\n        setMessages(messagesWithDateObjects);\r\n      } catch (error) {\r\n        console.error(\"Error parsing saved messages:\", error);\r\n      }\r\n    }\r\n  }, []);\r\n  \r\n  useEffect(() => {\r\n    if (messages.length > 0) {\r\n      localStorage.setItem(\"chatMessages\", JSON.stringify(messages));\r\n    }\r\n  }, [messages]);\r\n  \r\n  useEffect(() => {\r\n    scrollToBottom();\r\n  }, [messages]);\r\n  \r\n  useEffect(() => {\r\n    if (showDocuments) {\r\n      fetchDocuments();\r\n    }\r\n  }, [showDocuments]);\r\n  \r\n  const scrollToBottom = () => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n  };\r\n\r\n  const generateId = () => {\r\n    return Math.random().toString(36).substring(2, 15);\r\n  };\r\n\r\n  const fetchDocuments = async () => {\r\n    try {\r\n      const res = await fetch(`${API_URL}/documents`);\r\n      if (res.ok) {\r\n        const data = await res.json();\r\n        setDocuments(data);\r\n      } else {\r\n        console.error(\"Failed to fetch documents:\", await res.text());\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching documents:\", error);\r\n    }\r\n  };\r\n  \r\n  const uploadDocument = async (file: File) => {\r\n    setIsUploadingDoc(true);\r\n    setUploadError(\"\");\r\n    \r\n    try {\r\n      const formData = new FormData();\r\n      formData.append(\"file\", file);\r\n      \r\n      const res = await fetch(`${API_URL}/upload_document`, {\r\n        method: \"POST\",\r\n        body: formData,\r\n      });\r\n      \r\n      if (res.ok) {\r\n        const data = await res.json();\r\n        setDocuments(prev => [...prev, data]);\r\n        \r\n        const systemMessage: Message = {\r\n          id: generateId(),\r\n          role: \"bot\",\r\n          content: `Document \"${data.filename}\" uploaded successfully and is now available for answering queries.`,\r\n          timestamp: new Date(),\r\n          status: \"read\"\r\n        };\r\n        \r\n        setMessages(prev => [...prev, systemMessage]);\r\n        return data;\r\n      } else {\r\n        const errorText = await res.text();\r\n        setUploadError(`Failed to upload document: ${errorText}`);\r\n        console.error(\"Failed to upload document:\", errorText);\r\n        return null;\r\n      }\r\n    } catch (error) {\r\n      const errorMessage = error instanceof Error ? error.message : String(error);\r\n      setUploadError(`Error uploading document: ${errorMessage}`);\r\n      console.error(\"Error uploading document:\", error);\r\n      return null;\r\n    } finally {\r\n      setIsUploadingDoc(false);\r\n    }\r\n  };\r\n  \r\n  const deleteDocument = async (documentId: string) => {\r\n    try {\r\n      const res = await fetch(`${API_URL}/documents/${documentId}`, {\r\n        method: \"DELETE\"\r\n      });\r\n      \r\n      if (res.ok) {\r\n        setDocuments(prev => prev.filter(doc => doc.id !== documentId));\r\n        \r\n        const systemMessage: Message = {\r\n          id: generateId(),\r\n          role: \"bot\",\r\n          content: \"Document removed successfully.\",\r\n          timestamp: new Date(),\r\n          status: \"read\"\r\n        };\r\n        \r\n        setMessages(prev => [...prev, systemMessage]);\r\n      } else {\r\n        console.error(\"Failed to delete document:\", await res.text());\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error deleting document:\", error);\r\n    }\r\n  };\r\n\r\n  const sendMessage = async () => {\r\n    if (!input.trim() && selectedFiles.length === 0) return;\r\n  \r\n    let documentUploaded = false;\r\n    let uploadedDocAttachments: Array<{type: string, url: string, name: string, docId?: string}> = [];\r\n    \r\n    if (selectedFiles.length > 0) {\r\n      for (const file of selectedFiles) {\r\n        // Document file extensions\r\n        const docExtensions = ['pdf', 'txt', 'doc', 'docx', 'csv', 'md'];\r\n        const fileExt = file.name.split('.').pop()?.toLowerCase() || '';\r\n        \r\n        if (docExtensions.includes(fileExt)) {\r\n          // This is a document - upload to RAG system\r\n          const uploadResult = await uploadDocument(file);\r\n          if (uploadResult) {\r\n            documentUploaded = true;\r\n            uploadedDocAttachments.push({\r\n              type: file.type,\r\n              url: URL.createObjectURL(file), // Just for display\r\n              name: file.name,\r\n              docId: uploadResult.id\r\n            });\r\n          }\r\n        }\r\n      }\r\n    }\r\n    \r\n    const regularAttachments = await Promise.all(\r\n      selectedFiles\r\n        .filter(file => {\r\n          const fileExt = file.name.split('.').pop()?.toLowerCase() || '';\r\n          const docExtensions = ['pdf', 'txt', 'doc', 'docx', 'csv', 'md'];\r\n          return !docExtensions.includes(fileExt);\r\n        })\r\n        .map(async (file) => {\r\n          const url = URL.createObjectURL(file);\r\n          return {\r\n            type: file.type,\r\n            url: url,\r\n            name: file.name\r\n          };\r\n        })\r\n    );\r\n    \r\n    const allAttachments = [...uploadedDocAttachments, ...regularAttachments];\r\n    \r\n    if (documentUploaded && !input.trim() && regularAttachments.length === 0) {\r\n      setSelectedFiles([]);\r\n      return;\r\n    }\r\n  \r\n    const contentType = detectContentType(input.trim());\r\n    \r\n    const newMessage: Message = {\r\n      id: generateId(),\r\n      role: \"user\",\r\n      content: input.trim(),\r\n      contentType: contentType,\r\n      timestamp: new Date(),\r\n      status: \"sending\",\r\n      attachments: allAttachments.length > 0 ? allAttachments : undefined\r\n    };\r\n    \r\n    const newMessages = [...messages, newMessage];\r\n    setMessages(newMessages);\r\n    setInput(\"\");\r\n    setSelectedFiles([]);\r\n    \r\n    setTimeout(() => {\r\n      setMessages(prev => \r\n        prev.map(msg => \r\n          msg.id === newMessage.id ? { ...msg, status: \"sent\" } : msg\r\n        )\r\n      );\r\n    }, 500);\r\n\r\n    setBotIsTyping(true);\r\n    \r\n    try {\r\n      const res = await fetch(`${API_URL}/chat`, {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ \r\n          message: input,\r\n          attachments: allAttachments.map(a => a.name)\r\n        }),\r\n      });\r\n      \r\n      setMessages(prev => \r\n        prev.map(msg => \r\n          msg.id === newMessage.id ? { ...msg, status: \"delivered\" } : msg\r\n        )\r\n      );\r\n      \r\n      const data = await res.json();\r\n      \r\n      setBotIsTyping(false);\r\n      \r\n      // Add bot response\r\n      const botMessage: Message = {\r\n        id: generateId(),\r\n        role: \"bot\",\r\n        content: data.response,\r\n        contentType: detectContentType(data.response),\r\n        timestamp: new Date(),\r\n        status: \"read\"\r\n      };\r\n      \r\n      setMessages(prev => [...prev, botMessage]);\r\n      \r\n      setTimeout(() => {\r\n        setMessages(prev => \r\n          prev.map(msg => \r\n            msg.id === newMessage.id ? { ...msg, status: \"read\" } : msg\r\n          )\r\n        );\r\n      }, 1000);\r\n      \r\n    } catch (error) {\r\n      console.error(\"Error fetching response:\", error);\r\n      setBotIsTyping(false);\r\n      \r\n      const errorMessage: Message = {\r\n        id: generateId(),\r\n        role: \"bot\",\r\n        content: \"Sorry, I couldn't process your request. Please try again later.\",\r\n        timestamp: new Date(),\r\n        status: \"read\"\r\n      };\r\n      \r\n      setMessages(prev => [...prev, errorMessage]);\r\n    }\r\n  };\r\n\r\n  const handleKeyPress = (e: React.KeyboardEvent) => {\r\n    if (e.key === 'Enter' && !e.shiftKey) {\r\n      e.preventDefault();\r\n      sendMessage();\r\n    }\r\n  };\r\n\r\n  const clearChat = () => {\r\n    setMessages([]);\r\n    localStorage.removeItem(\"chatMessages\");\r\n  };\r\n\r\n  const copyToClipboard = (text: string) => {\r\n    navigator.clipboard.writeText(text);\r\n  };\r\n  \r\n  const addReaction = (messageId: string, emoji: string) => {\r\n    setMessages(prev => \r\n      prev.map(msg => {\r\n        if (msg.id === messageId) {\r\n          const reactions = msg.reactions || [];\r\n          const updatedReactions = reactions.includes(emoji) \r\n            ? reactions.filter(r => r !== emoji)\r\n            : [...reactions, emoji];\r\n          \r\n          return { ...msg, reactions: updatedReactions };\r\n        }\r\n        return msg;\r\n      })\r\n    );\r\n  };\r\n  \r\n  const handleFileSelect = () => {\r\n    fileInputRef.current?.click();\r\n  };\r\n  \r\n  const handleDocSelect = () => {\r\n    docInputRef.current?.click();\r\n  };\r\n  \r\n  const handleFileChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    if (e.target.files) {\r\n      setSelectedFiles(Array.from(e.target.files));\r\n    }\r\n  };\r\n  \r\n  const handleDocFileChange = async (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    if (e.target.files && e.target.files.length > 0) {\r\n      const file = e.target.files[0];\r\n      await uploadDocument(file);\r\n      \r\n      if (e.target instanceof HTMLInputElement) {\r\n        e.target.value = '';\r\n      }\r\n    }\r\n  };\r\n  \r\n\r\n\r\n\r\n  const toggleRecording = async () => {\r\n    if (!isRecording) {\r\n      try {\r\n        const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\r\n        const mediaRecorder = new MediaRecorder(stream);\r\n        \r\n        mediaRecorderRef.current = mediaRecorder;\r\n        audioChunksRef.current = [];\r\n        \r\n        mediaRecorder.ondataavailable = (e) => {\r\n          audioChunksRef.current.push(e.data);\r\n        };\r\n        \r\n        mediaRecorder.onstop = async () => {\r\n          const audioBlob = new Blob(audioChunksRef.current, { type: 'audio/wav' });\r\n          \r\n          setIsRecording(true);\r\n          \r\n          try {\r\n            const formData = new FormData();\r\n            formData.append('audio_file', audioBlob, 'recording.wav');\r\n            \r\n            // Add any additional metadata if needed\r\n            const requestData = {\r\n              filename: 'recording.wav',\r\n            };\r\n            formData.append('request_data', JSON.stringify(requestData));\r\n            \r\n            // Send to the backend API\r\n            const response = await fetch(`${API_URL}/transcribe_audio`, {\r\n              method: 'POST',\r\n              body: formData,\r\n            });\r\n            \r\n            if (!response.ok) {\r\n              throw new Error(`Server responded with ${response.status}`);\r\n            }\r\n            \r\n            const result = await response.json();\r\n            \r\n            setInput(prev => prev + (prev ? ' ' : '') + result.text);\r\n          } catch (error) {\r\n            console.error(\"Error transcribing audio:\", error);\r\n            setInput(prev => prev + (prev ? ' ' : '') + \"[Voice transcription failed]\");\r\n          } finally {\r\n            setIsRecording(false);\r\n            \r\n            stream.getTracks().forEach(track => track.stop());\r\n          }\r\n        };\r\n        \r\n        mediaRecorder.start();\r\n        setIsRecording(true);\r\n      } catch (error) {\r\n        console.error(\"Error accessing microphone:\", error);\r\n      }\r\n    } else {\r\n      if (mediaRecorderRef.current) {\r\n        mediaRecorderRef.current.stop();\r\n        setIsRecording(false);\r\n      }\r\n    }\r\n  };\r\n  \r\n  const toggleSearch = () => {\r\n    setIsSearching(!isSearching);\r\n    if (!isSearching) {\r\n      setSearchTerm(\"\");\r\n    }\r\n  };\r\n  \r\n  const toggleDocuments = () => {\r\n    setShowDocuments(!showDocuments);\r\n  };\r\n  \r\n  const exportChat = () => {\r\n    // Create a text version of the chat\r\n    const chatText = messages.map(msg => \r\n      `[${msg.timestamp.toLocaleString()}] ${msg.role === 'user' ? 'You' : 'Bot'}: ${msg.content}`\r\n    ).join('\\n\\n');\r\n    \r\n    // Create a download link\r\n    const blob = new Blob([chatText], { type: 'text/plain' });\r\n    const url = URL.createObjectURL(blob);\r\n    const a = document.createElement('a');\r\n    a.href = url;\r\n    a.download = `chat-export-${new Date().toISOString().slice(0,10)}.txt`;\r\n    document.body.appendChild(a);\r\n    a.click();\r\n    document.body.removeChild(a);\r\n    URL.revokeObjectURL(url);\r\n  };\r\n  \r\n  const detectContentType = (content: string): ContentType => {\r\n    // Check if it's code (basic heuristic: contains code blocks or common syntax)\r\n    if (\r\n      content.includes('```') || \r\n      content.includes('function ') || \r\n      content.includes('const ') || \r\n      content.includes('class ') ||\r\n      content.includes('import ') ||\r\n      content.includes('export ') ||\r\n      content.includes(';') && content.includes('{') && content.includes('}')\r\n    ) {\r\n      return 'code';\r\n    }\r\n    \r\n    // Check if it's JSON\r\n    if (\r\n      (content.startsWith('{') && content.endsWith('}')) ||\r\n      (content.startsWith('[') && content.endsWith(']'))\r\n    ) {\r\n      try {\r\n        JSON.parse(content);\r\n        return 'json';\r\n      } catch (e) {\r\n        // Not valid JSON\r\n      }\r\n    }\r\n    \r\n    // Check if it's an image reference\r\n    if (\r\n      content.match(/\\.(jpeg|jpg|gif|png|svg)$/i) ||\r\n      content.startsWith('data:image/')\r\n    ) {\r\n      return 'image';\r\n    }\r\n    \r\n    // Check if it's a link\r\n    const urlPattern = /https?:\\/\\/[^\\s]+/;\r\n    if (urlPattern.test(content)) {\r\n      return 'link';\r\n    }\r\n    \r\n    // Check if it's markdown\r\n    if (\r\n      content.includes('# ') ||\r\n      content.includes('## ') ||\r\n      content.includes('**') ||\r\n      content.includes('__') ||\r\n      content.includes('- ') ||\r\n      content.includes('> ') ||\r\n      content.includes('![') ||\r\n      content.includes('[') && content.includes('](')\r\n    ) {\r\n      return 'markdown';\r\n    }\r\n    \r\n    // Default to regular text\r\n    return 'text';\r\n  };\r\n\r\n  const formatTimestamp = (date: Date) => {\r\n    const now = new Date();\r\n    const diffDays = Math.floor((now.getTime() - date.getTime()) / (1000 * 60 * 60 * 24));\r\n    \r\n    if (diffDays === 0) {\r\n      return date.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });\r\n    } else if (diffDays === 1) {\r\n      return 'Yesterday';\r\n    } else if (diffDays < 7) {\r\n      return date.toLocaleDateString([], { weekday: 'short' });\r\n    } else {\r\n      return date.toLocaleDateString([], { month: 'short', day: 'numeric' });\r\n    }\r\n  };\r\n  \r\n  const formatFileSize = (bytes: number) => {\r\n    if (bytes < 1024) return bytes + ' B';\r\n    if (bytes < 1024 * 1024) return (bytes / 1024).toFixed(1) + ' KB';\r\n    return (bytes / (1024 * 1024)).toFixed(1) + ' MB';\r\n  };\r\n  \r\n  const renderMessageStatus = (status: Message['status']) => {\r\n    switch (status) {\r\n      case 'sending':\r\n        return <Clock className=\"w-3 h-3 text-gray-400\" />;\r\n      case 'sent':\r\n        return <Check className=\"w-3 h-3 text-gray-400\" />;\r\n      case 'delivered':\r\n        return <Check className=\"w-3 h-3 text-blue-500\" />;\r\n      case 'read':\r\n        return <CheckCheck className=\"w-3 h-3 text-blue-500\" />;\r\n    }\r\n  };\r\n  \r\n  const filteredMessages = searchTerm.trim() \r\n    ? messages.filter(msg => \r\n        msg.content.toLowerCase().includes(searchTerm.toLowerCase())\r\n      )\r\n    : messages;\r\n\r\nreturn (\r\n  <div className=\"flex flex-col items-center justify-center min-h-screen w-full bg-gradient-to-b from-gray-50 to-gray-100 dark:from-gray-900 dark:to-gray-800 p-2 sm:p-4\">\r\n    {/* Container with max width for large screens but responsive on small screens */}\r\n    <div className=\"w-full max-w-3xl mx-auto flex flex-col h-[98vh]\">\r\n      {/* Header Section with Controls */}\r\n      <div className=\"w-full mb-2 sm:mb-4 flex justify-between items-center p-2 sm:p-3 bg-white dark:bg-gray-800 rounded-2xl shadow-md\">\r\n        <h1 className=\"text-lg sm:text-xl font-bold text-gray-800 dark:text-white flex items-center\">\r\n          <BotIcon className=\"w-5 h-5 mr-2 text-blue-500\" />\r\n          Vision AI Chatbot\r\n        </h1>\r\n        \r\n        <div className=\"flex gap-1 sm:gap-2\">\r\n          <button\r\n            onClick={toggleSearch}\r\n            className={`p-1.5 sm:p-2 rounded-full ${isSearching ? 'bg-blue-500 text-white' : 'bg-gray-100 dark:bg-gray-700 text-gray-700 dark:text-gray-200'} hover:bg-opacity-90 transition`}\r\n            title=\"Search messages\"\r\n          >\r\n            <Search className=\"w-4 h-4 sm:w-5 sm:h-5\" />\r\n          </button>\r\n          \r\n          <button\r\n            onClick={toggleDocuments}\r\n            className={`p-1.5 sm:p-2 rounded-full ${showDocuments ? 'bg-blue-500 text-white' : 'bg-gray-100 dark:bg-gray-700 text-gray-700 dark:text-gray-200'} hover:bg-opacity-90 transition`}\r\n            title=\"Manage documents\"\r\n          >\r\n            <Database className=\"w-4 h-4 sm:w-5 sm:h-5\" />\r\n          </button>\r\n          \r\n          <button\r\n            onClick={exportChat}\r\n            className=\"bg-gray-100 dark:bg-gray-700 p-1.5 sm:p-2 rounded-full hover:bg-gray-200 dark:hover:bg-gray-600 transition text-gray-700 dark:text-gray-200\"\r\n            title=\"Export chat\"\r\n          >\r\n            <Download className=\"w-4 h-4 sm:w-5 sm:h-5\" />\r\n          </button>\r\n          \r\n          <button\r\n            onClick={() => setDarkMode(!darkMode)}\r\n            className=\"bg-gray-100 dark:bg-gray-700 p-1.5 sm:p-2 rounded-full hover:bg-gray-200 dark:hover:bg-gray-600 transition\"\r\n            title=\"Toggle dark mode\"\r\n          >\r\n            {darkMode ? \r\n              <Sun className=\"w-4 h-4 sm:w-5 sm:h-5 text-yellow-500\" /> : \r\n              <Moon className=\"w-4 h-4 sm:w-5 sm:h-5 text-gray-700\" />\r\n            }\r\n          </button>\r\n        </div>\r\n      </div>\r\n      \r\n      {/* Search Bar (conditional) */}\r\n      {isSearching && (\r\n        <div className=\"w-full mb-2 sm:mb-4\">\r\n          <Input\r\n            value={searchTerm}\r\n            onChange={(e) => setSearchTerm(e.target.value)}\r\n            placeholder=\"Search messages...\"\r\n            className=\"w-full p-2 sm:p-3 border rounded-xl bg-white dark:bg-gray-800 dark:text-white shadow-md\"\r\n          />\r\n        </div>\r\n      )}\r\n      \r\n      {/* Document Management Panel (conditional) */}\r\n      {showDocuments && (\r\n        <Card className=\"w-full mb-2 sm:mb-4 shadow-lg rounded-2xl  bg-white dark:bg-gray-800 border border-gray-200 dark:border-gray-700 flex-grow flex flex-col\">\r\n          <CardContent className=\"p-2 sm:p-4 scrollbar-thin\">\r\n            <div className=\"flex justify-between items-center mb-2 sm:mb-4\">\r\n              <h2 className=\"text-base sm:text-lg font-semibold dark:text-white flex items-center\">\r\n                <Database className=\"w-4 h-4 sm:w-5 sm:h-5 mr-2 text-blue-500\" />\r\n                Knowledge Base\r\n              </h2>\r\n              <Button \r\n                onClick={handleDocSelect}\r\n                className=\"bg-blue-600 hover:bg-blue-700 text-white px-2 sm:px-3 py-1 sm:py-2 rounded-lg flex items-center gap-1 sm:gap-2 text-xs sm:text-sm\"\r\n                disabled={isUploadingDoc}\r\n              >\r\n                {isUploadingDoc ? (\r\n                  <div className=\"animate-spin h-3 w-3 sm:h-4 sm:w-4 border-2 border-white border-t-transparent rounded-full\" />\r\n                ) : (\r\n                  <FileUp className=\"w-3 h-3 sm:w-4 sm:h-4\" />\r\n                )}\r\n                Upload\r\n              </Button>\r\n            </div>\r\n            \r\n            {uploadError && (\r\n              <div className=\"mb-2 sm:mb-4 p-2 sm:p-3 bg-red-100 border border-red-400 text-red-700 rounded-md flex items-start\">\r\n                <AlertCircle className=\"w-4 h-4 sm:w-5 sm:h-5 mr-2 flex-shrink-0 mt-0.5\" />\r\n                <p className=\"text-xs sm:text-sm\">{uploadError}</p>\r\n              </div>\r\n            )}\r\n            \r\n            {documents.length === 0 ? (\r\n              <div className=\"text-center py-4 sm:py-6 text-gray-500 dark:text-gray-400\">\r\n                <BookOpen className=\"w-8 h-8 sm:w-10 sm:h-10 mx-auto mb-2 opacity-50\" />\r\n                <p className=\"text-sm\">No documents uploaded yet.</p>\r\n                <p className=\"text-xs mt-1\">Upload documents to enhance responses.</p>\r\n              </div>\r\n            ) : (\r\n              <div className=\"space-y-2 max-h-40 sm:max-h-48 overflow-y-auto pr-1 scrollbar-thin\">\r\n                {documents.map(doc => (\r\n                  <div \r\n                    key={doc.id} \r\n                    className=\"p-2 bg-gray-50 dark:bg-gray-700 rounded-lg flex items-center justify-between\"\r\n                  >\r\n                    <div className=\"flex items-center overflow-hidden\">\r\n                      <FileText className=\"w-4 h-4 sm:w-5 sm:h-5 mr-2 text-blue-500 flex-shrink-0\" />\r\n                      <div className=\"overflow-hidden\">\r\n                        <p className=\"font-medium text-xs sm:text-sm dark:text-white truncate\">{doc.filename}</p>\r\n                        <p className=\"text-xs text-gray-500 dark:text-gray-400\">\r\n                          {new Date(doc.upload_date).toLocaleDateString()}\r\n                        </p>\r\n                      </div>\r\n                    </div>\r\n                    <button\r\n                      onClick={() => deleteDocument(doc.id)}\r\n                      className=\"p-1 text-red-500 hover:text-red-700 dark:text-red-400 dark:hover:text-red-300 flex-shrink-0\"\r\n                      title=\"Delete document\"\r\n                    >\r\n                      <Trash className=\"w-3 h-3 sm:w-4 sm:h-4\" />\r\n                    </button>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            )}\r\n          </CardContent>\r\n        </Card>\r\n      )}\r\n\r\n      {/* Main Chat Area */}\r\n      <Card className=\"w-full shadow-lg rounded-2xl overflow-hidden bg-white dark:bg-gray-800 border border-gray-200 dark:border-gray-700 flex-grow flex flex-col\">\r\n        <CardContent className=\"flex-grow overflow-y-auto p-2 sm:p-4 flex flex-col gap-2 sm:gap-3 scrollbar-thin\">\r\n          {/* Initial welcome message if no messages */}\r\n          {messages.length === 0 && (\r\n            <div className=\"text-center py-6 sm:py-10 flex-grow flex flex-col items-center justify-center\">\r\n              <BotIcon className=\"w-12 h-12 sm:w-16 sm:h-16 mx-auto mb-3 sm:mb-4 text-blue-500 opacity-70\" />\r\n              <h2 className=\"text-lg sm:text-xl font-semibold mb-2 dark:text-white\">Welcome to Vision AI Chatbot</h2>\r\n              <p className=\"text-sm text-gray-600 dark:text-gray-400 mb-4 max-w-md\">\r\n                I can answer questions based on your uploaded documents. Try uploading some documents first!\r\n              </p>\r\n              <Button \r\n                onClick={toggleDocuments}\r\n                className=\"bg-blue-600 hover:bg-blue-700 text-white px-3 sm:px-4 py-1.5 sm:py-2 rounded-lg flex items-center gap-2 text-sm\"\r\n              >\r\n                <Database className=\"w-4 h-4 sm:w-5 sm:h-5\" />\r\n                Manage Documents\r\n              </Button>\r\n            </div>\r\n          )}\r\n          \r\n          {filteredMessages.map((msg, i) => (\r\n            <div key={msg.id} className={`relative ${searchTerm && msg.content.toLowerCase().includes(searchTerm.toLowerCase()) ? 'bg-yellow-50 dark:bg-yellow-900/30 p-1 rounded-xl' : ''}`}>\r\n              <div className=\"flex items-start\">\r\n                {/* Avatar */}\r\n                <div className=\"mr-2 flex-shrink-0\">\r\n                  {msg.role === \"user\" ? (\r\n                    <div className=\"w-6 h-6 sm:w-8 sm:h-8 bg-blue-500 rounded-full flex items-center justify-center text-white\">\r\n                      <UserCircle className=\"w-4 h-4 sm:w-5 sm:h-5\" />\r\n                    </div>\r\n                  ) : (\r\n                    <div className=\"w-6 h-6 sm:w-8 sm:h-8 bg-green-500 rounded-full flex items-center justify-center text-white\">\r\n                      <BotIcon className=\"w-4 h-4 sm:w-5 sm:h-5\" />\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                \r\n                <div className=\"flex-grow\">\r\n                  {/* Message with timestamp */}\r\n                  <div className=\"flex items-center mb-1\">\r\n                    <span className=\"font-medium text-xs sm:text-sm text-gray-700 dark:text-gray-300\">\r\n                      {msg.role === \"user\" ? \"You\" : \"Bot\"}\r\n                    </span>\r\n                    <span className=\"text-xs text-gray-500 ml-2\">\r\n                      {formatTimestamp(msg.timestamp)}\r\n                    </span>\r\n                    \r\n                    {/* Content type indicator */}\r\n                    {msg.contentType && msg.contentType !== 'text' && (\r\n                      <span className=\"ml-2 hidden sm:flex items-center text-xs text-gray-500 bg-gray-100 dark:bg-gray-700 px-1.5 py-0.5 rounded\">\r\n                        {msg.contentType === 'code' && <Code className=\"w-3 h-3 mr-1\" />}\r\n                        {msg.contentType === 'json' && <Code className=\"w-3 h-3 mr-1\" />}\r\n                        {msg.contentType === 'link' && <Link className=\"w-3 h-3 mr-1\" />}\r\n                        {msg.contentType === 'image' && <ImageIcon className=\"w-3 h-3 mr-1\" />}\r\n                        {msg.contentType === 'markdown' && <FileText className=\"w-3 h-3 mr-1\" />}\r\n                        {msg.contentType.charAt(0).toUpperCase() + msg.contentType.slice(1)}\r\n                      </span>\r\n                    )}\r\n                    \r\n                    {/* Message status (only for user messages) */}\r\n                    {msg.role === \"user\" && (\r\n                      <span className=\"ml-auto\">\r\n                        {renderMessageStatus(msg.status)}\r\n                      </span>\r\n                    )}\r\n                  </div>\r\n                  \r\n                  {/* Message bubble */}\r\n                  <motion.div\r\n                    initial={{ opacity: 0, y: 5 }}\r\n                    animate={{ opacity: 1, y: 0 }}\r\n                    transition={{ duration: 0.2 }}\r\n                    className={`p-2 sm:p-3 rounded-2xl break-words text-sm sm:text-base ${\r\n                      msg.role === \"user\"\r\n                        ? \"bg-blue-600 text-white\"\r\n                        : \"bg-gray-100 dark:bg-gray-700 text-gray-800 dark:text-gray-200\"\r\n                    }`}\r\n                  >\r\n                    {/* Content based on type */}\r\n                    {msg.contentType === 'code' ? (\r\n                      <div className=\"font-mono text-xs sm:text-sm bg-gray-800 dark:bg-gray-900 text-green-400 p-2 rounded overflow-x-auto\">\r\n                        <pre>{msg.content}</pre>\r\n                      </div>\r\n                    ) : msg.contentType === 'json' ? (\r\n                      <div className=\"font-mono text-xs sm:text-sm bg-gray-800 dark:bg-gray-900 text-yellow-300 p-2 rounded overflow-x-auto\">\r\n                        <pre>{msg.content}</pre>\r\n                      </div>\r\n                    ) : msg.contentType === 'link' ? (\r\n                      <div>\r\n                        <a \r\n                          href={msg.content} \r\n                          target=\"_blank\" \r\n                          rel=\"noopener noreferrer\"\r\n                          className=\"text-blue-300 dark:text-blue-400 underline break-all\"\r\n                        >\r\n                          {msg.content}\r\n                        </a>\r\n                      </div>\r\n                    ) : msg.contentType === 'image' ? (\r\n                      <div>\r\n                        <div className=\"mt-1\">\r\n                          <img \r\n                            src={msg.content} \r\n                            alt=\"Shared image\" \r\n                            className=\"max-w-full rounded\"\r\n                            onError={(e) => {\r\n                              const target = e.target as HTMLImageElement;\r\n                              target.onerror = null;\r\n                              target.src = '/placeholder-image.jpg';\r\n                            }}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                    ) : msg.contentType === 'markdown' ? (\r\n                      <div className=\"prose dark:prose-invert prose-sm max-w-none\">\r\n                        {/* In a real app, you'd use a markdown parser here */}\r\n                        {msg.content}\r\n                      </div>\r\n                    ) : (\r\n                      // Default text\r\n                      <div>{msg.content}</div>\r\n                    )}\r\n                    \r\n                    {/* Attachments if any */}\r\n                    {msg.attachments && msg.attachments.length > 0 && (\r\n                      <div className=\"mt-2 space-y-1 sm:space-y-2\">\r\n                        {msg.attachments.map((attachment, idx) => (\r\n                          <div key={idx} className=\"flex items-center p-1.5 sm:p-2 rounded bg-white dark:bg-gray-600 bg-opacity-20 text-xs sm:text-sm\">\r\n                            {attachment.docId ? (\r\n                              // RAG document indicator\r\n                              <Database className=\"w-3 h-3 sm:w-4 sm:h-4 mr-1 sm:mr-2 text-green-500\" />\r\n                            ) : (\r\n                              <Paperclip className=\"w-3 h-3 sm:w-4 sm:h-4 mr-1 sm:mr-2\" />\r\n                            )}\r\n                            <span className=\"truncate\">\r\n                              {attachment.name}\r\n                              {attachment.docId && <span className=\"ml-1 text-xs text-gray-300\">(KB)</span>}\r\n                            </span>\r\n                          </div>\r\n                        ))}\r\n                      </div>\r\n                    )}\r\n                  </motion.div>\r\n                  \r\n                  {/* Reactions */}\r\n                  {msg.reactions && msg.reactions.length > 0 && (\r\n                    <div className=\"flex mt-1 space-x-1\">\r\n                      {msg.reactions.map((emoji, idx) => (\r\n                        <span \r\n                          key={idx} \r\n                          className=\"px-1.5 py-0.5 bg-gray-100 dark:bg-gray-700 rounded-full text-xs sm:text-sm\"\r\n                        >\r\n                          {emoji}\r\n                        </span>\r\n                      ))}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                \r\n                {/* Message Actions - Show on hover or tap on mobile */}\r\n                <div className=\"hidden group-hover:flex sm:flex flex-row sm:flex-col ml-1 sm:ml-2 sm:space-y-1 space-x-1 sm:space-x-0\">\r\n                  <button\r\n                    onClick={() => copyToClipboard(msg.content)}\r\n                    className=\"p-1 bg-gray-100 dark:bg-gray-700 rounded-full text-gray-600 dark:text-gray-300 hover:bg-gray-200 dark:hover:bg-gray-600 transition\"\r\n                    title=\"Copy message\"\r\n                  >\r\n                    <Copy className=\"w-3 h-3 sm:w-4 sm:h-4\" />\r\n                  </button>\r\n                  \r\n                  <button\r\n                    onClick={() => addReaction(msg.id, \"👍\")}\r\n                    className=\"p-1 bg-gray-100 dark:bg-gray-700 rounded-full text-gray-600 dark:text-gray-300 hover:bg-gray-200 dark:hover:bg-gray-600 transition\"\r\n                    title=\"Add reaction\"\r\n                  >\r\n                    <Smile className=\"w-3 h-3 sm:w-4 sm:h-4\" />\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ))}\r\n          \r\n          {/* Bot typing indicator */}\r\n          {botIsTyping && (\r\n            <div className=\"flex items-start\">\r\n              <div className=\"mr-2\">\r\n                <div className=\"w-6 h-6 sm:w-8 sm:h-8 bg-green-500 rounded-full flex items-center justify-center text-white\">\r\n                  <BotIcon className=\"w-4 h-4 sm:w-5 sm:h-5\" />\r\n                </div>\r\n              </div>\r\n              <motion.div \r\n                className=\"p-2 sm:p-3 rounded-xl bg-gray-100 dark:bg-gray-700\"\r\n                animate={{ opacity: [0.5, 1, 0.5] }}\r\n                transition={{ repeat: Infinity, duration: 1.5 }}\r\n              >\r\n                <div className=\"flex space-x-1\">\r\n                  <div className=\"w-1.5 h-1.5 sm:w-2 sm:h-2 rounded-full bg-gray-500 dark:bg-gray-300\"></div>\r\n                  <div className=\"w-1.5 h-1.5 sm:w-2 sm:h-2 rounded-full bg-gray-500 dark:bg-gray-300\"></div>\r\n                  <div className=\"w-1.5 h-1.5 sm:w-2 sm:h-2 rounded-full bg-gray-500 dark:bg-gray-300\"></div>\r\n                </div>\r\n              </motion.div>\r\n            </div>\r\n          )}\r\n          \r\n          {/* This empty div helps us scroll to bottom */}\r\n          <div ref={messagesEndRef} />\r\n        </CardContent>\r\n\r\n        {/* Input Area - Always visible at bottom */}\r\n        <div className=\"sticky bottom-0 bg-white dark:bg-gray-800 p-2 sm:p-4 border-t dark:border-gray-700\">\r\n          {/* Selected Files Preview */}\r\n          {selectedFiles.length > 0 && (\r\n            <div className=\"mb-2 flex flex-wrap gap-1 sm:gap-2\">\r\n              {selectedFiles.map((file, idx) => {\r\n                // Check if it's a document that will be processed by RAG\r\n                const fileExt = file.name.split('.').pop()?.toLowerCase() || '';\r\n                const docExtensions = ['pdf', 'txt', 'doc', 'docx', 'csv', 'md'];\r\n                const isRagDocument = docExtensions.includes(fileExt);\r\n                \r\n                return (\r\n                  <div \r\n                    key={idx} \r\n                    className={`px-1.5 sm:px-2 py-0.5 sm:py-1 ${isRagDocument ? 'bg-green-100 dark:bg-green-900' : 'bg-blue-100 dark:bg-blue-900'} rounded-lg text-xs flex items-center`}\r\n                  >\r\n                    {isRagDocument ? (\r\n                      <Database className=\"w-2.5 h-2.5 sm:w-3 sm:h-3 mr-1 text-green-700 dark:text-green-500\" />\r\n                    ) : (\r\n                      <Paperclip className=\"w-2.5 h-2.5 sm:w-3 sm:h-3 mr-1\" />\r\n                    )}\r\n                    <span className=\"truncate max-w-[100px] sm:max-w-[150px]\">{file.name}</span>\r\n                    <span className=\"ml-1 text-xs opacity-70 hidden sm:inline\">\r\n                      {formatFileSize(file.size)}\r\n                    </span>\r\n                    <button \r\n                      onClick={() => setSelectedFiles(prev => prev.filter((_, i) => i !== idx))}\r\n                      className=\"ml-1 text-red-500 hover:text-red-700\"\r\n                    >\r\n                      ×\r\n                    </button>\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n          )}\r\n          \r\n          <div className=\"flex gap-1 sm:gap-2\">\r\n          <div className=\"relative w-full max-w-2xl mx-auto\">\r\n            <input\r\n              value={input}\r\n              onChange={(e) => setInput(e.target.value)}\r\n              onKeyPress={handleKeyPress}\r\n              placeholder=\"Ask a question...\"\r\n              className=\"w-full p-3 pr-12 border rounded-xl bg-gray-50 dark:bg-gray-700 dark:text-white focus:ring-2 focus:ring-blue-500 focus:outline-none\"\r\n            />\r\n            <button \r\n              onClick={sendMessage} \r\n              className=\"absolute right-2 top-1/2 transform -translate-y-1/2 bg-blue-600 hover:bg-blue-700 text-white rounded-full flex items-center justify-center w-8 h-8\"\r\n              aria-label=\"Send message\"\r\n            >\r\n              <Send className=\"w-4 h-4\" />\r\n            </button>\r\n          </div>\r\n\r\n            {/* Mobile-optimized button row with smaller icons on small screens */}\r\n            <div className=\"flex gap-1 sm:gap-2\">\r\n              <button\r\n                onClick={handleFileSelect}\r\n                className=\"p-2 sm:p-3 bg-gray-100 dark:bg-gray-700 text-gray-700 dark:text-gray-200 rounded-lg hover:bg-gray-200 dark:hover:bg-gray-600\"\r\n                title=\"Add attachment\"\r\n              >\r\n                <Paperclip className=\"w-4 h-4 sm:w-5 sm:h-5\" />\r\n              </button>\r\n              \r\n              <button\r\n                onClick={toggleRecording}\r\n                className={`p-2 sm:p-3 rounded-lg ${\r\n                  isRecording \r\n                    ? \"bg-red-500 text-white\" \r\n                    : \"bg-gray-100 dark:bg-gray-700 text-gray-700 dark:text-gray-200 hover:bg-gray-200 dark:hover:bg-gray-600\"\r\n                }`}\r\n                title={isRecording ? \"Stop recording\" : \"Start voice recording\"}\r\n              >\r\n                <Mic className=\"w-4 h-4 sm:w-5 sm:h-5\" />\r\n              </button>\r\n\r\n              {/* Only show clear chat on larger screens, move to menu on mobile */}\r\n              <button \r\n                onClick={clearChat} \r\n                className=\"hidden sm:flex p-2 sm:p-3 bg-red-500 hover:bg-red-600 text-white rounded-lg items-center justify-center\"\r\n                title=\"Clear chat\"\r\n              >\r\n                <Trash2 className=\"w-4 h-4 sm:w-5 sm:h-5\" />\r\n              </button>\r\n            </div>\r\n          </div>\r\n          \r\n          {/* Hidden file inputs */}\r\n          <input\r\n            type=\"file\"\r\n            ref={fileInputRef}\r\n            onChange={handleFileChange}\r\n            multiple\r\n            className=\"hidden\"\r\n          />\r\n          \r\n          <input\r\n            type=\"file\"\r\n            ref={docInputRef}\r\n            onChange={handleDocFileChange}\r\n            accept=\".pdf,.txt,.doc,.docx,.csv,.md\"\r\n            className=\"hidden\"\r\n          />\r\n        </div>\r\n      </Card>\r\n      \r\n      {/* Mobile footer with version/help */}\r\n      <div className=\"mt-2 text-center\">\r\n        <p className=\"text-xs text-gray-500 dark:text-gray-400\">\r\n        Vision AI Chatbot v2.0 <br /> Developed by Sai Sri harsha Guddati •\r\n          <button className=\"ml-1 text-blue-500 hover:text-blue-600\">\r\n            Help\r\n          </button>\r\n        </p>\r\n      </div>\r\n    </div>\r\n  </div>\r\n);\r\n}"],"names":[],"mappings":"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"}},
    {"offset": {"line": 1867, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}