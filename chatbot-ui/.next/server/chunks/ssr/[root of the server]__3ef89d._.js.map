{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/saisr/OneDrive/Desktop/Personal_Project_6/frontend/chatbot-ui/src/app/page.tsx"],"sourcesContent":["\"use client\"; // Required for useState in Next.js App Router\n\nimport { useState } from \"react\";\nimport { Input } from \"@/components/ui/input\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent } from \"@/components/ui/card\";\nimport { motion } from \"framer-motion\"; // Fix import\n\ntype Message = {\n    role: \"user\" | \"bot\";\n    content: string;\n};\n\nexport default function Chatbot() {\n    const [messages, setMessages] = useState<Message[]>([]);\n    const [input, setInput] = useState(\"\");\n\n    const sendMessage = async () => {\n        if (!input.trim()) return;\n        const newMessages = [...messages, { role: \"user\", content: input }];\n        setMessages(newMessages);\n        setInput(\"\");\n\n        try {\n            const res = await fetch(\"http://localhost:8000/chat\", {\n                method: \"POST\",\n                headers: { \"Content-Type\": \"application/json\" },\n                body: JSON.stringify({ message: input }),\n            });\n            const data = await res.json();\n            setMessages([...newMessages, { role: \"bot\", content: data.response }]);\n        } catch (error) {\n            console.error(\"Error fetching response:\", error);\n        }\n    };\n\n    return (\n        <div className=\"flex flex-col items-center justify-center min-h-screen bg-gray-100 p-4\">\n            <Card className=\"w-full max-w-md p-4 shadow-lg rounded-xl\">\n                <CardContent className=\"h-80 overflow-y-auto flex flex-col gap-2\">\n                    {messages.map((msg, i) => (\n                        <motion.div\n                            key={i}\n                            initial={{ opacity: 0, y: 10 }}\n                            animate={{ opacity: 1, y: 0 }}\n                            transition={{ duration: 0.3 }}\n                            className={`p-2 rounded-lg ${msg.role === \"user\" ? \"bg-blue-500 text-white self-end\" : \"bg-gray-200 self-start\"}`}\n                        >\n                            {msg.content}\n                        </motion.div>\n                    ))}\n                </CardContent>\n                <div className=\"flex gap-2 mt-4\">\n                    <Input value={input} onChange={(e) => setInput(e.target.value)} placeholder=\"Type a message...\" className=\"flex-1\" />\n                    <Button onClick={sendMessage} className=\"bg-blue-600 text-white\">Send</Button>\n                </div>\n            </Card>\n        </div>\n    );\n}\n"],"names":[],"mappings":";;;;AAEA;;;;;;;;;;;;;;;;AAIA,iUAAwC,aAAa;AANrD,cAAc,8CAA8C;;;;;;;AAa7C,SAAS;IACpB,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAa,EAAE;IACtD,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAEnC,MAAM,cAAc;QAChB,IAAI,CAAC,MAAM,IAAI,IAAI;QACnB,MAAM,cAAc;eAAI;YAAU;gBAAE,MAAM;gBAAQ,SAAS;YAAM;SAAE;QACnE,YAAY;QACZ,SAAS;QAET,IAAI;YACA,MAAM,MAAM,MAAM,MAAM,8BAA8B;gBAClD,QAAQ;gBACR,SAAS;oBAAE,gBAAgB;gBAAmB;gBAC9C,MAAM,KAAK,SAAS,CAAC;oBAAE,SAAS;gBAAM;YAC1C;YACA,MAAM,OAAO,MAAM,IAAI,IAAI;YAC3B,YAAY;mBAAI;gBAAa;oBAAE,MAAM;oBAAO,SAAS,KAAK,QAAQ;gBAAC;aAAE;QACzE,EAAE,OAAO,OAAO;YACZ,QAAQ,KAAK,CAAC,4BAA4B;QAC9C;IACJ;IAEA,qBACI,8OAAC;QAAI,WAAU;kBACX,cAAA,8OAAC;YAAK,WAAU;;8BACZ,8OAAC;oBAAY,WAAU;8BAClB,SAAS,GAAG,CAAC,CAAC,KAAK,kBAChB,8OAAC,0LAAA,CAAA,SAAM,CAAC,GAAG;4BAEP,SAAS;gCAAE,SAAS;gCAAG,GAAG;4BAAG;4BAC7B,SAAS;gCAAE,SAAS;gCAAG,GAAG;4BAAE;4BAC5B,YAAY;gCAAE,UAAU;4BAAI;4BAC5B,WAAW,CAAC,eAAe,EAAE,IAAI,IAAI,KAAK,SAAS,oCAAoC,0BAA0B;sCAEhH,IAAI,OAAO;2BANP;;;;;;;;;;8BAUjB,8OAAC;oBAAI,WAAU;;sCACX,8OAAC;4BAAM,OAAO;4BAAO,UAAU,CAAC,IAAM,SAAS,EAAE,MAAM,CAAC,KAAK;4BAAG,aAAY;4BAAoB,WAAU;;;;;;sCAC1G,8OAAC;4BAAO,SAAS;4BAAa,WAAU;sCAAyB;;;;;;;;;;;;;;;;;;;;;;;AAKrF"}},
    {"offset": {"line": 150, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}